version: "3"
services:
  hmpps-probation-supervision-appointments-api:
    build:
      context: .
    networks:
      - hmpps
    container_name: hmpps-probation-supervision-appointments-api
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      - SPRING_PROFILES_ACTIVE=dev
      - GRAPH_CLIENT_CLIENT_ID=${GRAPH_CLIENT_ID} #get value from 1password and populate .env
      - GRAPH_CLIENT_CLIENT_SECRET=${GRAPH_CLIENT_SECRET} #get value from 1password and populate .env
      - GRAPH_CLIENT_TENANT_ID=${GRAPH_TENANT_ID} #get value from 1password and populate .env
      - CALENDAR_FROM_EMAIL=${CALENDAR_FROM_EMAIL} #get value from 1password and populate .env
      - DATABASE_PASSWORD=password
      - DATABASE_URL=jdbc:postgresql://probation-supervision-db:5432/probation-supervision
      - DATABASE_USERNAME=postgres

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "8090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0

  probation-supervision-db:
    image: postgres:16
    networks:
      - hmpps
    container_name: probation-supervision-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=probation-supervision
networks:
  hmpps:
